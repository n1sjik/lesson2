package ifmo.Lesson8;

// оператор final
// если сспользуется с классом то мы запрещаем наследоваться от этого класса

public final class CalcUtils {
    // значение свойств объявленных как final должны быть определены сразу же
     final double PI1 = 3.14;
    // либо в конструкторе
    final double PI_2;
    // значения для final свойств нельзя изменить
    // константы прописываются через _ между словами и в верхнем регистре
    public CalcUtils() {
        PI_2 = 3.14;
    }

    //  final методы
    // нельзя переопеределять в классах-наследниках (дочерних)
    // аргументы final в методе доступны только для чтения
    public final void someVoid(final int num
                             , final SomeClass sc
                             , final int[] arr) {
        System.out.println(sc);
        System.out.println(sc.name);
        sc.name = "New name";// свойства можно менять
        //sc = new SomeClass(); сам объект менять нельзя
        arr [4] = 32;//любой элемент менять можно сам массив нет
    }



    class SomeClass {
        String name;
    }

    //  оператор Static
    // статик свойства и методы не имеют отношения к объектам
    // статик принадлежит классу (не можем создавать уникальные объекты)
    // статические методы используются в утилитарных методах(обслуживающие, вспомогательные)
    // в фабричных методах (которые создают объекты)
    // в статических методах мы не можем обращаться к не статическим свойствам и методам


    static double PI;

    //статический блок для работы со статическими свойствами
    // статический блок загружается в память 1 раз когда в память выгружается класс
    static {
        PI = 3.14;
    }

    public static int summ (int a, int b){
        return a+b;
    }

}
